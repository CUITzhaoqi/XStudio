
class QXDockWidget : QXWidget{
    public static const int DockWidgetClosable    = 0x01;
    public static const int DockWidgetMovable     = 0x02;
    public static const int DockWidgetFloatable   = 0x04;
    public static const int DockWidgetVerticalTitleBar = 0x08;
    public static const int DockWidgetFeatureMask = 0x0f;
    public static const int AllDockWidgetFeatures = DockWidgetClosable|DockWidgetMovable|DockWidgetFloatable; // ### Qt 6: remove
    public static const int NoDockWidgetFeatures  = 0x00;
    public static const int Reserved              = 0xff;
    
    public static const int
        LeftDockWidgetArea = 0x1,
        RightDockWidgetArea = 0x2,
        TopDockWidgetArea = 0x4,
        BottomDockWidgetArea = 0x8,

        DockWidgetArea_Mask = 0xf,
        AllDockWidgetAreas = 0xf,
        NoDockWidgetArea = 0;
    
    public bool create(@NotNilptr QXWidget parent) override {
        nativehandle = createQObject(QType.qtDockWidget, this, parent.nativehandle);
        if (nativehandle == 0) {
            return false;
        }
        return true;
    }
    
    public QXDockWidget(){
    }
    
    public QXDockWidget(long handle){
        super(handle);
    }
    public bool isFlating(){
        return widget_get_bool_value(nativehandle, QXCore.FLATING);
    }
    
    public void setFlating(bool b){
        widget_set_bool_value(nativehandle, QXCore.FLATING, b);
    }
    
    public QXWidget getTitalBar(){
        return (QXWidget)widget_get_object(nativehandle, QXCore.TITLEBAR);
    }
    
    public void 
    setFeatures(int features){
        widget_set_vint_value(nativehandle, QXCore.DOCKWIDGETFEATURE, features);
    }
    
    public void 
    setAllowedAreas(int area){
        widget_set_vint_value(nativehandle, QXCore.DOCKSETALLOWEDAREAS, area);
    }
    
    public void setWidget(@NotNilptr QXWidget w){
        widget_set_native_value(nativehandle, QXCore.SETWIDGET, w.nativehandle);
    }
    
    public QXWidget getWidget(){
        return (QXWidget)widget_get_object(nativehandle, GETWIDGET);
    }
    
};