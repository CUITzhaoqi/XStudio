//xlang Source, Name:QXMatrix.xcsm 
//Date: Mon Oct 23:07:48 2018 

class QXMatrix : QXCore{
    public QXMatrix(){
        nativehandle = createNObject(QType.qtMatrix, 0);
    }
    
    public QXMatrix(long h){
        nativehandle = h;
    }
    
    public QXPoint mapPoint(@NotNilptr QXPoint p){
		long v = object_get_long_int(nativehandle, MATRIXMAPPOINT, p.x, p.y);
        return new QXPoint((int)(v >> 32) & 0xffffffff, (int)v & 0xffffffff);
    }
    
    public QXRect mapRect(@NotNilptr QXRect r){
		long lt = object_get_long_int(nativehandle, MATRIXMAPPOINT, r.left, r.top);
        long rb = object_get_long_int(nativehandle, MATRIXMAPPOINT, r.right, r.bottom);
        long lb = object_get_long_int(nativehandle, MATRIXMAPPOINT, r.left, r.bottom);
        long rt = object_get_long_int(nativehandle, MATRIXMAPPOINT, r.right, r.top);
        
        int x1 = (int)(lt >> 32) & 0xffffffff,
			x2 = (int)(rb >> 32) & 0xffffffff,
            x3 = (int)(lb >> 32) & 0xffffffff,
            x4 = (int)(rt >> 32) & 0xffffffff;
            
        int y1 = (int)lt & 0xffffffff,
			y2 = (int)rb & 0xffffffff,
            y3 = (int)lb & 0xffffffff,
            y4 = (int)rt & 0xffffffff;
                
        return new QXRect(
			Math.min(x1,Math.min(x2,Math.min(x3,x4))), Math.min(y1,Math.min(y2,Math.min(y3,y4))),
			Math.max(x1,Math.max(x2,Math.max(x3,x4))), Math.max(y1,Math.max(y2,Math.max(y3,y4)))
			);
    }
    
    public QXMatrix translate(double x, double y){
		return new QXMatrix(long_double2(nativehandle, MATRIXTRANSLATE, x, y));
    }
    
    public QXMatrix scale(double sx, double sy){
		return new QXMatrix(long_double2(nativehandle, MATRIXSCALE, sx, sy));
    }

    public QXMatrix shear(double sh, double sv){
		return new QXMatrix(long_double2(nativehandle, MATRIXSHEAR, sh, sv));
    }
    
    public QXMatrix rotate(double a){
		return new QXMatrix(long_double2(nativehandle, MATRIXROTATE, a, 0));
    }
    
    public QXMatrix operator *(@NotNilptr QXMatrix m){
		return new QXMatrix(object_get_long_int(nativehandle, MATRIXMUL, m.nativehandle, 0));
    }
    
    public void finalize(){
		if (nativehandle != 0){
			widget_slot(nativehandle, MATRIXDTOR);
        }
    }
};