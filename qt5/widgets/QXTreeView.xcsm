class QXTreeView : QXWidget{
    
    public static const int 
        NoItemFlags = 0,
        ItemIsSelectable = 1,
        ItemIsEditable = 2,
        ItemIsDragEnabled = 4,
        ItemIsDropEnabled = 8,
        ItemIsUserCheckable = 16,
        ItemIsEnabled = 32,
        ItemIsAutoTristate = 64,
        ItemIsTristate = ItemIsAutoTristate,
        ItemNeverHasChildren = 128,
        ItemIsUserTristate = 256;
        
    public QXTreeView(){
    
    }
    
    public QXTreeView(long handle){
        super(handle);
    }
    
    public bool create()override {
        nativehandle = createQObject(QType.qtTreeView, this, 0);
        if (nativehandle == 0){
            return false;
        }
        return true;
    }
    
    public bool create(@NotNilptr QXWidget parent)override {
        nativehandle = createQObject(QType.qtTreeView, this, parent.nativehandle);
        if (nativehandle == 0){
            return false;
        }
        return true;
    }
    
    public long addItem(String icon, String Text){
        return long_string2(nativehandle, TREEWIDGETADD, icon, Text);
    }
    public long addItemWithIcon(@NotNilptr QXIcon icon, String Text){
        return long_longstring(nativehandle, TREEWIDGETADD, icon.nativehandle, Text);
    }
    public long insertItem(long parent, String icon, String Text){
        return long_long_string2(nativehandle, TREEWIDGETINST, parent, icon, Text);
    }
	public void removeItem(long item){
		widget_set_native_value(nativehandle, TREEWIDGETREM, item);
	}
    public void setCurrentItem(long item){
		widget_set_native_value(nativehandle, TREESETCURITEM, item);
	}
    public void setItemText(long item, int row ,String text){
        widget_set_intlongstring_value(nativehandle, SETITEMTEXT, item, row, text);
    }
    public void setItemIcon(long item, int row ,String file){
        widget_set_intlongstring_value(nativehandle, SETITEMICON, item, row, file);
    }
    public void setItemColor(long item, int row ,int color){
        widget_set_intlongint_value(nativehandle, SETITEMCOLOR, item, row, color);
    }
    
    public void setItemBackColor(long item, int row ,int color){
        widget_set_intlongint_value(nativehandle, SETBACKCOLOR, item, row, color);
    }
    
    public void setItemBackgroundBrush(long item, int row ,@NotNilptr QXBrush brush){
        widget_set_intlongint_value(item, TRSETFOREBR, brush.nativehandle, row, 0);
    }
    
    public void setItemForegroundBrush(long item, int row ,@NotNilptr QXBrush brush){
        widget_set_intlongint_value(item, TRSETBACKBR, brush.nativehandle, row, 0);
    }
    
    public void setColumns(String [] columns){
        widget_set_object_value(nativehandle, SETCOLUMNS, columns);
    }
    
    public void setItemTag(long item, int row, long tag){
        object_set_long_int_long(nativehandle, SETTAG, item, row, tag);
    }
    
    public long getItemTag(long item ,int row){
        return object_get_long_int(nativehandle, GETTAG, item ,row);
    }
    public void setColumnWidth(int column, int width){
        widget_set_v2int_value(nativehandle, SETCOLUMBWIDTH, column, width);
    }
	public @NotNilptr String getItemText(long item , int row){
        String __txt = (String)core_getStringlongint(nativehandle, TRGETITEMTEXT, item, row);
        __nilptr_safe(__txt);
        return __txt;
	}
    public long getSelItem(){
        return long_get(nativehandle, TREEWIDGETGETSEL);
    }
    public void setItemSelected(long item, bool select){
        object_get_long_int(nativehandle, TREEITEMSELED, item ,select ? 1 : 0);
    }
    public void clear(){
        widget_get_bool_value(nativehandle, TREEWIDGETCLEAR);
    }
	public QXWidget viewPort(){
		return (QXWidget)widget_get_object(nativehandle, GETVIEWPORT);
	}
	public void setHeaderVisible(bool b){
		widget_set_bool_value(nativehandle, TRCOLUMNSHOW, b);
	}
    public void scrollToBottom(){
		widget_slot(nativehandle, TRSCROLLBOTTOM);
    }
	public void setSortEnable(bool b){
		widget_set_bool_value(nativehandle, TRSORTENABLE, b);
	}
	public void setFullRowSelection(bool b){
		widget_set_bool_value(nativehandle, TRSELECTMODE, b);
	}
	public int getHeaderWidth(){
		return widget_get_int_value(nativehandle,TRHEADERWIDTH);
	}
	public void setColumnAutoResize(bool b){
		widget_set_bool_value(nativehandle, TRAUTORESIZE, b);
	}
	public void setTextElidMode(int mode){
		widget_set_vint_value(nativehandle, TRELIDMODE, mode);
	}
	public int getCurrentRow(){
		return widget_get_int_value(nativehandle, TREEGETCURROW);
	}
	public int getCurrentColumn(){
		return widget_get_int_value(nativehandle, TREEGETCURCOL);
	}
	public void setCurrentIndex(int row, int column){
		widget_set_v2int_value(nativehandle, TREESETCURROW, row, column);
	}
	public void setCurrentRow(int row){
		widget_set_vint_value(nativehandle, TREESETCURROW, row);
	}
    
	public void setCurrentComuln(int column){
		widget_set_vint_value(nativehandle, TREESETCURCOL, column);
	}
    
    public void removeAllchild(long item){
		widget_slot(item, TRIEMCLEARCHILD);
    }
    
    public void setExpand(long item, bool bExp){
		widget_set_bool_value(item, TRIEMSETEXPAND, bExp);
    }
    
    public void setItemVisible(long item, bool bVisible){
		widget_set_bool_value(item, TRIEMSETHIDDEN, !bVisible);
    }
    
	public int getTopLevelCount(){
		return widget_get_int_value(nativehandle, TREEGETCOUNT);
	}
    
    public long getTopItem(int id){
		return object_get_long_int(nativehandle, GETTOPITEM, id, 0);
    }
    
	public long[] getSelectedItems(){
		return (long[])widget_get_object(nativehandle, TREEGETSELITEM);
	}
    
	public long[] getTopItems(){
		return (long[])widget_get_object(nativehandle, TREEGETTOPITEMS);
	}
    
    public long[] getItemChildren(long item){
		return (long[])widget_get_object(item, TREEGETCHILDREN);
    }
    
    public void modifyItemFlags(long item, int add, int remove){
		widget_set_v2int_value(item, TREEITEMFLAG, add, remove);
    }
    
    public int getItemFlags(long item){
		return widget_get_int_value(item, TREEITEMGETFLAG);
    }
    
    public long getParentItem(long item){
		return long_get(item, TREEITEMPARENT);
    }
    
    public void setItemCheck(long item ,int column, bool checked){
		widget_set_int_bool_value(item,TRITEMSETCHECK, column, checked);
    }
    
    public bool isItemCheck(long item ,int column){
		return widget_get_int_bool(item,TRITEMGETCHECK, column);
    }
    
    public bool isItemExpand(long item){
        return widget_get_int_bool(item,TREEITEMISEXPAND, 0);
    }
};