//xlang Source, Name:qt5/widgets/QXTableWidget.xcsm 
//Date: Mon Feb 18:20:25 2019 

class QXTableWidget : QXWidget{
    public QXTableWidget(){
    
    }
    
    public QXTableWidget(long handle){
        super(handle);
    }
    
	public bool create() override {
        nativehandle = createQObject(QType.qtTableWidget, this, 0);
        if (nativehandle == 0){
            return false;
        }
        return true;
	}

	public bool create(@NotNilptr QXWidget parent) override {
        nativehandle = createQObject(QType.qtTableWidget, this, parent.nativehandle);
        if (nativehandle == 0){
            return false;
        }
        return true;
	}

	public long setItem(int row, int column, String icon, String text){
		return long_long_string2(nativehandle, TABLESETITEM, ((long)row) << 32 | column, icon, text);
    }
    
    public void setColumnCount(int c){
		widget_set_vint_value(nativehandle, TABLESETCOLUMNCNT, c);
    }
    
    public void setRowCount(int c){
		widget_set_vint_value(nativehandle, TABLESETROWCNT, c);
    }
    
    public void removeRow(int n){
		widget_set_vint_value(nativehandle, TABLEREMOVEROW, n);
    }
    
    public void removeColumn(int n){
		widget_set_vint_value(nativehandle, TABLEREMOVECOLUMN, n);
    }
    
    public void selectRow(int n){
		widget_set_vint_value(nativehandle, TABLESELECTROW, n);
    }
    
    public void modifyItemFlags(long item, int add, int remove){
		widget_set_v2int_value(item, TABLEITEMFLAG, add, remove);
    }
    
    public void setItemTag(long item, long tag){
        object_set_long_int_long(nativehandle, TABLESETTAG, item, 0, tag);
    }
    
    public long getTag(long item){
		return object_get_long_int(0, TABLEGETTAG, item, 0);
    }
    
    public void setHHStretchLastSection(bool b){
		widget_set_bool_value(nativehandle, TABLESETHHLS, b);
    }
    public void setVHResizeMode(int b){
		widget_set_vint_value(nativehandle, TABLESETVHRM, b);
    }
    public void setVHDefaultSectionSize(int b){
		widget_set_vint_value(nativehandle, TABLESETVHDSS, b);
    }
    public void setShowGrid(bool s){
		widget_set_bool_value(nativehandle, TABLESETSG, s);
    }
    public void setVHVisible(bool bv){
		widget_set_bool_value(nativehandle, TABLESETVHV, bv);
    }
    public void setSelectionMode(int sm){
		widget_set_vint_value(nativehandle, TABLESETSM, sm);
    }
    public void setSelectionBehavior(int sb){
		widget_set_vint_value(nativehandle, TABLESETSB, sb);
    }
    public void setEditTriggers(int et){
		widget_set_vint_value(nativehandle, TABLESETET, et);
    }
    public void resizeHHSection(int row, int size){
		widget_set_v2int_value(nativehandle, TABLESETHHRS, row, size);
    }
    public void setHHFixedHeight(int h){
		widget_set_vint_value(nativehandle, TABLESETHHFH, h);
    }
    public void setHHColumns(String [] columns){
		widget_set_object_value(nativehandle, SETTABHHCOLUMNS, columns);
    }
    public void setVHColumns(String [] columns){
		widget_set_object_value(nativehandle, SETTABVHCOLUMNS, columns);
    }
    public String getText(int x, int y){
		return (String)core_getStringlongint(nativehandle, TABLEGETTEXTBYRC, x, y);
    }
    public String getItemText(long item){
		return (String)core_getStringlongint(item, TABLEGETTEXTBYITEM, 0, 0);
    }
    public void clear(){
		widget_slot(nativehandle, TABLECLEAR);
    }
    public void clearContent(){
		widget_slot(nativehandle, TABLECLEARCONTENT);
    }
	public long[] getSelectedItems(){
		return (long[])widget_get_object(nativehandle, TABLEGETSELITEM);
	}
    public long getItem(int row, int column){
		return object_get_long_int(nativehandle, TABLEGETITEM, row, column);
    }
    public QXRect [] getSelectedRanges(){
		long [] rs = (long[])widget_get_object(nativehandle, TABLEGETSELRANGE);
        if (rs != nilptr){
            QXRect []rgs = new QXRect[rs.length / 2];
            
            for (long i =0, c = rgs.length; i < c; i++){
                QXRect r = new QXRect((int)(rs[i * 2] >> 32) & 0xffffffff, (int)(rs[i * 2 + 1] >> 32) & 0xffffffff, (int)rs[i * 2] & 0xffffffff, (int)rs[i * 2 + 1] & 0xffffffff);
                rgs[i] = r;
            }
            
            return rgs;
        }
        return nilptr;
    }
    public void setItemText(long item, String text){
		widget_set_intlongstring_value(0, SETTABLEITEMTEXT, item, 0, text);
    }
    public void setItemIcon(long item , String iconFile){
		widget_set_intlongstring_value(0, SETTABLEITEMICON, item, 0, iconFile);
    }
    public void setItemColor(long item, int color){
        widget_set_intlongint_value(nativehandle, SETTABLEITEMCOLOR, item, 0, color);
    }
    public void setItemBackColor(long item, int color){
        widget_set_intlongint_value(nativehandle, SETTABLEITEMBACKCOLOR, item, 0, color);
    }
    public void setItemCheck(long item , bool checked){
		widget_set_int_bool_value(item,TABITEMSETCHECK, 0, checked);
    }
    
    public bool isItemCheck(long item){
		return widget_get_int_bool(item,TABITEMGETCHECK, 0);
    }
    
    public int getItemFlags(long item){
		return widget_get_int_value(item, TABITEMGETFLAG);
    }
    
    public void setCellWidget(int x,int y,@NotNilptr  QXWidget w){
		widget_set_intlongint_value(nativehandle, TABLESETCELLWIDGET, w.nativehandle, x, y);
    }
    
    public QXWidget getCellWidget(int x,int y){
		return (QXWidget)object_get_handle2(nativehandle, TABLEGETCELLWIDGET, x, y);
    }
};