class FileOutputStream : Stream{
	long filehandler;

	public FileOutputStream(String path){
		filehandler = XPlatform.openSystemFile(path, "w");
        if (filehandler == 0){
            throw new IllegalArgumentException("file " + path + " can not open");
        }
	}
    public FileOutputStream(String path, bool append){
        filehandler = XPlatform.openSystemFile(path, append ? "a" : "w");
        if (filehandler == 0){
            throw new IllegalArgumentException("file " + path + " can not open");
        }
    }
	public bool attach(String path){
		if (filehandler != 0){
			_system_.closeFile(filehandler);
			filehandler = 0;
		}
		filehandler = XPlatform.openSystemFile(path, "w");
        return filehandler != 0;
	}
    public void checkValid(){
        if (filehandler == 0){
            throw new IllegalArgumentException("The Stream is not ready");
        }
    }
	public long available(bool bwait){
		return 1;
    }
	public long seek(int type, long pos){
		return 0;
    }
    
    public long getPosition(){
		return 0;
    }
    
	public long length(){
        checkValid();
		return 0;
	}

	public byte[] read(){
		return nilptr;
	}

	public int read(byte [] data , int position, int length)override{
		return 0;
	}
    
	public long write(byte [] data){
        checkValid();
		return _system_.writeFile(filehandler, data, 0, data.length);
	}
    
	public int write(byte [] data , int position, int length)override{
        checkValid();
		return _system_.writeFile(filehandler, data, position, length);
    }
    
    public void close(){
		if (filehandler != 0){
			_system_.closeFile(filehandler);
			filehandler = 0;
		}
    }
	public void finalize(){
		close();
	}
};
