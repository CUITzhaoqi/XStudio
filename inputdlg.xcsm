//xlang Source, Name:gotoline.xcsm 
//Date: Sun Sep 19:06:03 2018 

class InputDialog : QXDialog {

	public static class onInputListener{
		public bool onInputOk(String text);
        public bool onInputCancel();
        public bool onSelectOk(int id){
            return false;
        }
        public String getTitle();
        public String getTips();
        public String getDefault();
    };
    
    public onInputListener listener;
	public InputDialog(onInputListener intputlis){
		listener = intputlis;
    }

    QXPushButton btnOk, btnCancel;
    QXLineEdit edtLine;
    
    String result = nilptr;
    public void onAttach()override{ 
    
        setWindowFlags(CustomizeWindowHint | WindowCloseButtonHint);
        
        setFixedSize(width(), height());
        
        btnOk = (QXPushButton)attachByName(new QXPushButton(), "btnOk");
        btnCancel = (QXPushButton)attachByName(new QXPushButton(), "btnCancel");
        
        edtLine = (QXLineEdit)attachByName(new QXLineEdit(), "edtLine");
        QXLabel label = (QXLabel)attachByName(new QXLabel(), "label");
        
        edtLine.setText(listener.getDefault());
        
        btnOk.setOnClickListener(
        new onClickListener(){
            void onClick(QXObject obj, bool checked)override{
				String text = edtLine.getText();
                if (listener.onInputOk(text)){
                    result = text;
					close();
                }           
            }
        });
        
        btnCancel.setOnClickListener(
        new onClickListener(){
            void onClick(QXObject obj, bool checked)override{
                if (listener.onInputCancel()){
					close();
                }
            }
        });
        
        label.setText(listener.getTips());
        
		setWindowTitle(listener.getTitle());
        
        setModal(true);
        
        
        edtLine.setFocus();
    }
    
    public static void requestInput(onInputListener lis){
		QXDialog newDlg = new QXDialog();
        if (newDlg.load("ui/goto.ui") == false){
            return ;
        }
        InputDialog wizard = new InputDialog(lis);	
        
        wizard.attach(newDlg);
        wizard.show();
    }
    
    public static String requestInputDlg(onInputListener lis){
		QXDialog newDlg = new QXDialog();
        if (newDlg.load("ui/goto.ui") == false){
            return nilptr;
        }
        InputDialog wizard = new InputDialog(lis);	
        
        wizard.attach(newDlg);
        wizard.exec();
        return wizard.result;
    }
};